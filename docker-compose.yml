volumes:
  minio:
  rabbitmq:
  redis:
services:
  rabbitmq:
    image: rabbitmq:4.0.5-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: 'test'
      RABBITMQ_DEFAULT_PASS: 'test'
    volumes:
      - 'rabbitmq:/var/lib/rabbitmq'
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      # Adjust the health checks to better fit your needs
      start_period: 60s
      interval: 5s
      timeout: 1s
      retries: 3
  minio:
    image: minio/minio:RELEASE.2024-07-04T14-25-45Z
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: ['CMD', 'mc', 'ready', 'local']
      interval: 5s
      timeout: 1s
      retries: 3
    volumes:
      - 'minio:/data'
  mc:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 minioadmin minioadmin && \
      mc mb minio/tf2-automatic --ignore-existing && \
      mc anonymous set public minio/tf2-automatic
      "
  redis:
    image: redis:7.2.4-alpine
    command: redis-server --requirepass test --appendonly yes --maxmemory-policy noeviction
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 1s
      retries: 3
