version: '3.8'
volumes:
  minio:
  rabbitmq:
  redis:
services:
  rabbitmq:
    image: rabbitmq:3.13.0-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: 'test'
      RABBITMQ_DEFAULT_PASS: 'test'
    volumes:
      - 'rabbitmq:/var/lib/rabbitmq'
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 1s
      retries: 3
  minio:
    image: minio/minio:RELEASE.2024-03-26T22-10-45Z
    command: server /data --console-address ":9001"
    expose:
      - '9000'
    ports:
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 5s
      timeout: 1s
      retries: 3
    volumes:
      - 'minio:/data'
  redis:
    image: redis:7.2.4-alpine
    command: redis-server --requirepass test --appendonly yes --maxmemory-policy noeviction
    expose:
      - '6379'
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 1s
      retries: 3
  bot-manager:
    image: ghcr.io/tf2-automatic/bot-manager:latest
    pull_policy: always
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    expose:
      - '3000'
    ports:
      - '3001:3000'
    environment:
      REDIS_HOST: 'redis'
      REDIS_PORT: 6379
      REDIS_PASSWORD: 'test'
      RABBITMQ_HOST: 'rabbitmq'
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: 'test'
      RABBITMQ_PASSWORD: 'test'
      RABBITMQ_VHOST: ''
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-S', 'http://localhost:3000/health']
      interval: 5s
      timeout: 1s
      retries: 3
  message-relay:
    image: ghcr.io/tf2-automatic/message-relay:latest
    pull_policy: always
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      REDIS_HOST: 'redis'
      REDIS_PORT: 6379
      REDIS_PASSWORD: 'test'
      RABBITMQ_HOST: 'rabbitmq'
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: 'test'
      RABBITMQ_PASSWORD: 'test'
      RABBITMQ_VHOST: ''
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-S', 'http://localhost:3000/health']
      interval: 5s
      timeout: 1s
      retries: 3
  bot1:
    image: ghcr.io/tf2-automatic/bot:latest
    pull_policy: always
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      bot-manager:
        condition: service_healthy
    expose:
      - '3000'
    ports:
      - '3000:3000'
    environment:
      DEBUG: true
      # Input your bot's credentials here
      STEAM_USERNAME: ''
      STEAM_PASSWORD: ''
      STEAM_SHARED_SECRET: ''
      STEAM_IDENTITY_SECRET: ''
      # RabbitMQ connection details
      RABBITMQ_HOST: 'rabbitmq'
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: 'test'
      RABBITMQ_PASSWORD: 'test'
      RABBITMQ_VHOST: ''
      # Storage settings
      STORAGE_TYPE: 's3'
      STORAGE_S3_ENDPOINT: 'minio'
      STORAGE_S3_PORT: 9000
      STORAGE_S3_USE_SSL: false
      STORAGE_S3_PATH: '/'
      STORAGE_S3_BUCKET: 'tf2-automatic'
      STORAGE_S3_ACCESS_KEY_ID: 'minioadmin'
      STORAGE_S3_SECRET_ACCESS_KEY: 'minioadmin'
      # Bot manager settings
      BOT_MANAGER_ENABLED: true
      BOT_MANAGER_URL: 'http://bot-manager:3000'
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-S', 'http://localhost:3000/health']
      interval: 5s
      timeout: 1s
      retries: 3
